#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
/*
 * <auto-generated>
 * Autogenerated by Thrift Compiler (0.16.0)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * </auto-generated>
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
//using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;

using Thrift.Protocol;
using Thrift.Protocol.Entities;
using Thrift.Protocol.Utilities;
//using Thrift.Transport;
//using Thrift.Transport.Client;
//using Thrift.Transport.Server;
//using Thrift.Processor;


#nullable disable                // suppress C# 8.0 nullable contexts (we still support earlier versions)
#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace Parquet.Thrift
{

  public partial class AesGcmCtrV1 : TBase
  {
    private byte[] _aad_prefix;
    private byte[] _aad_file_unique;
    private bool _supply_aad_prefix;

    /// <summary>
    /// AAD prefix *
    /// </summary>
    public byte[] Aad_prefix
    {
      get
      {
        return _aad_prefix;
      }
      set
      {
        __isset.aad_prefix = true;
        this._aad_prefix = value;
      }
    }

    /// <summary>
    /// Unique file identifier part of AAD suffix *
    /// </summary>
    public byte[] Aad_file_unique
    {
      get
      {
        return _aad_file_unique;
      }
      set
      {
        __isset.aad_file_unique = true;
        this._aad_file_unique = value;
      }
    }

    /// <summary>
    /// In files encrypted with AAD prefix without storing it,
    /// readers must supply the prefix *
    /// </summary>
    public bool Supply_aad_prefix
    {
      get
      {
        return _supply_aad_prefix;
      }
      set
      {
        __isset.supply_aad_prefix = true;
        this._supply_aad_prefix = value;
      }
    }


    public Isset __isset;
    public struct Isset
    {
      public bool aad_prefix;
      public bool aad_file_unique;
      public bool supply_aad_prefix;
    }

    public AesGcmCtrV1()
    {
    }

    public AesGcmCtrV1 DeepCopy()
    {
      var tmp265 = new AesGcmCtrV1();
      if((Aad_prefix != null) && __isset.aad_prefix)
      {
        tmp265.Aad_prefix = this.Aad_prefix.ToArray();
      }
      tmp265.__isset.aad_prefix = this.__isset.aad_prefix;
      if((Aad_file_unique != null) && __isset.aad_file_unique)
      {
        tmp265.Aad_file_unique = this.Aad_file_unique.ToArray();
      }
      tmp265.__isset.aad_file_unique = this.__isset.aad_file_unique;
      if(__isset.supply_aad_prefix)
      {
        tmp265.Supply_aad_prefix = this.Supply_aad_prefix;
      }
      tmp265.__isset.supply_aad_prefix = this.__isset.supply_aad_prefix;
      return tmp265;
    }

    public async global::System.Threading.Tasks.Task ReadAsync(TProtocol iprot, CancellationToken cancellationToken)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        await iprot.ReadStructBeginAsync(cancellationToken);
        while (true)
        {
          field = await iprot.ReadFieldBeginAsync(cancellationToken);
          if (field.Type == TType.Stop)
          {
            break;
          }

          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String)
              {
                Aad_prefix = await iprot.ReadBinaryAsync(cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 2:
              if (field.Type == TType.String)
              {
                Aad_file_unique = await iprot.ReadBinaryAsync(cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            case 3:
              if (field.Type == TType.Bool)
              {
                Supply_aad_prefix = await iprot.ReadBoolAsync(cancellationToken);
              }
              else
              {
                await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              }
              break;
            default: 
              await TProtocolUtil.SkipAsync(iprot, field.Type, cancellationToken);
              break;
          }

          await iprot.ReadFieldEndAsync(cancellationToken);
        }

        await iprot.ReadStructEndAsync(cancellationToken);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public async global::System.Threading.Tasks.Task WriteAsync(TProtocol oprot, CancellationToken cancellationToken)
    {
      oprot.IncrementRecursionDepth();
      try
      {
        var tmp266 = new TStruct("AesGcmCtrV1");
        await oprot.WriteStructBeginAsync(tmp266, cancellationToken);
        var tmp267 = new TField();
        if((Aad_prefix != null) && __isset.aad_prefix)
        {
          tmp267.Name = "aad_prefix";
          tmp267.Type = TType.String;
          tmp267.ID = 1;
          await oprot.WriteFieldBeginAsync(tmp267, cancellationToken);
          await oprot.WriteBinaryAsync(Aad_prefix, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if((Aad_file_unique != null) && __isset.aad_file_unique)
        {
          tmp267.Name = "aad_file_unique";
          tmp267.Type = TType.String;
          tmp267.ID = 2;
          await oprot.WriteFieldBeginAsync(tmp267, cancellationToken);
          await oprot.WriteBinaryAsync(Aad_file_unique, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        if(__isset.supply_aad_prefix)
        {
          tmp267.Name = "supply_aad_prefix";
          tmp267.Type = TType.Bool;
          tmp267.ID = 3;
          await oprot.WriteFieldBeginAsync(tmp267, cancellationToken);
          await oprot.WriteBoolAsync(Supply_aad_prefix, cancellationToken);
          await oprot.WriteFieldEndAsync(cancellationToken);
        }
        await oprot.WriteFieldStopAsync(cancellationToken);
        await oprot.WriteStructEndAsync(cancellationToken);
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override bool Equals(object that)
    {
      if (!(that is AesGcmCtrV1 other)) return false;
      if (ReferenceEquals(this, other)) return true;
      return ((__isset.aad_prefix == other.__isset.aad_prefix) && ((!__isset.aad_prefix) || (TCollections.Equals(Aad_prefix, other.Aad_prefix))))
        && ((__isset.aad_file_unique == other.__isset.aad_file_unique) && ((!__isset.aad_file_unique) || (TCollections.Equals(Aad_file_unique, other.Aad_file_unique))))
        && ((__isset.supply_aad_prefix == other.__isset.supply_aad_prefix) && ((!__isset.supply_aad_prefix) || (global::System.Object.Equals(Supply_aad_prefix, other.Supply_aad_prefix))));
    }

    public override int GetHashCode() {
      int hashcode = 157;
      unchecked {
        if((Aad_prefix != null) && __isset.aad_prefix)
        {
          hashcode = (hashcode * 397) + Aad_prefix.GetHashCode();
        }
        if((Aad_file_unique != null) && __isset.aad_file_unique)
        {
          hashcode = (hashcode * 397) + Aad_file_unique.GetHashCode();
        }
        if(__isset.supply_aad_prefix)
        {
          hashcode = (hashcode * 397) + Supply_aad_prefix.GetHashCode();
        }
      }
      return hashcode;
    }

    public override string ToString()
    {
      var tmp268 = new StringBuilder("AesGcmCtrV1(");
      int tmp269 = 0;
      if((Aad_prefix != null) && __isset.aad_prefix)
      {
        if(0 < tmp269++) { tmp268.Append(", "); }
        tmp268.Append("Aad_prefix: ");
        Aad_prefix.ToString(tmp268);
      }
      if((Aad_file_unique != null) && __isset.aad_file_unique)
      {
        if(0 < tmp269++) { tmp268.Append(", "); }
        tmp268.Append("Aad_file_unique: ");
        Aad_file_unique.ToString(tmp268);
      }
      if(__isset.supply_aad_prefix)
      {
        if(0 < tmp269++) { tmp268.Append(", "); }
        tmp268.Append("Supply_aad_prefix: ");
        Supply_aad_prefix.ToString(tmp268);
      }
      tmp268.Append(')');
      return tmp268.ToString();
    }
  }

}
